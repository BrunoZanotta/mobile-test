name: CI de Testes Mobile com Appium

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  packages: write
  actions: read

env:
  MAVEN_OPTS: "-Dmaven.artifact.threads=8 -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn -Djava.net.preferIPv4Stack=true"

jobs:
  build-and-push-image:
    name: Build & Push da Imagem (GHCR)
    runs-on: ubuntu-latest

    outputs:
      image: ${{ steps.meta.outputs.image }}
      tags: ${{ steps.meta.outputs.tags }}

    steps:
      - uses: actions/checkout@v4

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/setup-qemu-action@v3

      - uses: docker/setup-buildx-action@v3
        with:
          install: true
          driver: docker-container

      - id: meta
        run: |
          OWNER_LC="$(echo "${GITHUB_REPOSITORY_OWNER}" | tr '[:upper:]' '[:lower:]')"
          IMAGE="ghcr.io/${OWNER_LC}/mobile-test"
          echo "image=${IMAGE}" >> "$GITHUB_OUTPUT"
          echo "tags=${IMAGE}:latest,${IMAGE}:${GITHUB_SHA::8}" >> "$GITHUB_OUTPUT"

      - uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILDKIT_INLINE_CACHE=1

  run-tests:
    name: Executar Testes (na imagem publicada)
    runs-on: ubuntu-latest
    needs: build-and-push-image

    container:
      image: ${{ needs.build-and-push-image.outputs.image }}:latest
      env:
        MAVEN_OPTS: "-Dmaven.artifact.threads=8 -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn -Djava.net.preferIPv4Stack=true"

    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: /root/.m2
          key: m2-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            m2-${{ runner.os }}-

      - run: |
        nohup appium --base-path /wd/hub > appium.log 2>&1 &
        for i in {1..30}; do
        curl -sf http://localhost:4723/wd/hub/status && break
        sleep 1
        done
        curl -sf http://localhost:4723/wd/hub/status || (echo "Appium n√£o respondeu a tempo" && exit 1)

      - run: |
          mvn -B clean test

      - if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: target/allure-results
          retention-days: 7

      - if: always()
        uses: actions/upload-artifact@v4
        with:
          name: appium-log
          path: appium.log
          retention-days: 7